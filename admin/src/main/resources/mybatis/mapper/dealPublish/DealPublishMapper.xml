<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.admin.dao.dealPublish.DealPublishDao">
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
	    <![CDATA[
			id ,
			user_id ,
			type ,
			is_publish ,
			coin ,
			price ,
			number ,
			sell_number ,
			freeze_number ,
			accomplish_num ,
			state ,
			serial_number ,
			intro ,
			sold_out_time ,
			cancel_time ,
			backout_user_id ,
			is_deleted ,
			create_time ,
			create_by ,
			modify_time ,
			modify_by 
	    ]]>
	</sql>

	  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="pm">
	    select 
	    <include refid="Base_Column_List" />
	    from tran_deal_publish 
	    where id = #{ id }
	  </select>
	  
       <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
	    update tran_deal_publish set is_deleted = 'Y'
	    where id = #{ id }
	  </update>
	  
	  <insert id="insert" parameterType="pm" useGeneratedKeys="true" keyProperty="id">
	    insert into tran_deal_publish (<include refid="Base_Column_List" />)
	    values (
	        	#{ id } ,
	        	#{ userId } ,
	        	#{ type } ,
	        	#{ isPublish } ,
	        	#{ coin } ,
	        	#{ price } ,
	        	#{ number } ,
	        	#{ sellNumber } ,
	        	#{ freezeNumber } ,
	        	#{ accomplishNum } ,
	        	#{ state } ,
	        	#{ serialNumber } ,
	        	#{ intro } ,
	        	#{ soldOutTime } ,
	        	#{ cancelTime } ,
	        	#{ backoutUserId } ,
	        	#{ isDeleted } ,
	        	#{ createTime } ,
	        	#{ createBy } ,
	        	#{ modifyTime } ,
	        	#{ modifyBy } 
	    )
  	  </insert>  
  
  <insert id="insertSelective" parameterType="pm" useGeneratedKeys="true" keyProperty="id">
    insert into tran_deal_publish
    <trim prefix="(" suffix=")" suffixOverrides=",">
	              <if test="id != null">
			        id ,
			      </if>
	              <if test="userId != null">
			        user_id ,
			      </if>
	              <if test="type != null">
			        type ,
			      </if>
	              <if test="isPublish != null">
			        is_publish ,
			      </if>
	              <if test="coin != null">
			        coin ,
			      </if>
	              <if test="price != null">
			        price ,
			      </if>
	              <if test="number != null">
			        number ,
			      </if>
	              <if test="sellNumber != null">
			        sell_number ,
			      </if>
	              <if test="freezeNumber != null">
			        freeze_number ,
			      </if>
	              <if test="accomplishNum != null">
			        accomplish_num ,
			      </if>
	              <if test="state != null">
			        state ,
			      </if>
	              <if test="serialNumber != null">
			        serial_number ,
			      </if>
	              <if test="intro != null">
			        intro ,
			      </if>
	              <if test="soldOutTime != null">
			        sold_out_time ,
			      </if>
	              <if test="cancelTime != null">
			        cancel_time ,
			      </if>
	              <if test="backoutUserId != null">
			        backout_user_id ,
			      </if>
	              <if test="isDeleted != null">
			        is_deleted ,
			      </if>
	              <if test="createTime != null">
			        create_time ,
			      </if>
	              <if test="createBy != null">
			        create_by ,
			      </if>
	              <if test="modifyTime != null">
			        modify_time ,
			      </if>
	              <if test="modifyBy != null">
			        modify_by ,
			      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
	      <if test="id != null">
	        #{ id } ,
	      </if>
	      <if test="userId != null">
	        #{ userId } ,
	      </if>
	      <if test="type != null">
	        #{ type } ,
	      </if>
	      <if test="isPublish != null">
	        #{ isPublish } ,
	      </if>
	      <if test="coin != null">
	        #{ coin } ,
	      </if>
	      <if test="price != null">
	        #{ price } ,
	      </if>
	      <if test="number != null">
	        #{ number } ,
	      </if>
	      <if test="sellNumber != null">
	        #{ sellNumber } ,
	      </if>
	      <if test="freezeNumber != null">
	        #{ freezeNumber } ,
	      </if>
	      <if test="accomplishNum != null">
	        #{ accomplishNum } ,
	      </if>
	      <if test="state != null">
	        #{ state } ,
	      </if>
	      <if test="serialNumber != null">
	        #{ serialNumber } ,
	      </if>
	      <if test="intro != null">
	        #{ intro } ,
	      </if>
	      <if test="soldOutTime != null">
	        #{ soldOutTime } ,
	      </if>
	      <if test="cancelTime != null">
	        #{ cancelTime } ,
	      </if>
	      <if test="backoutUserId != null">
	        #{ backoutUserId } ,
	      </if>
	      <if test="isDeleted != null">
	        #{ isDeleted } ,
	      </if>
	      <if test="createTime != null">
	        #{ createTime } ,
	      </if>
	      <if test="createBy != null">
	        #{ createBy } ,
	      </if>
	      <if test="modifyTime != null">
	        #{ modifyTime } ,
	      </if>
	      <if test="modifyBy != null">
	        #{ modifyBy } ,
	      </if>
    </trim>
  </insert>
    
  
  <update id="updateByPrimaryKeySelective" parameterType="pm">
    update tran_deal_publish
    <set>
	      <if test="id != null">
	         id = #{ id } ,
	      </if>
	      <if test="userId != null">
	         user_id = #{ userId } ,
	      </if>
	      <if test="type != null">
	         type = #{ type } ,
	      </if>
	      <if test="isPublish != null">
	         is_publish = #{ isPublish } ,
	      </if>
	      <if test="coin != null">
	         coin = #{ coin } ,
	      </if>
	      <if test="price != null">
	         price = #{ price } ,
	      </if>
	      <if test="number != null">
	         number = #{ number } ,
	      </if>
	      <if test="sellNumber != null">
	         sell_number = #{ sellNumber } ,
	      </if>
	      <if test="freezeNumber != null">
	         freeze_number = #{ freezeNumber } ,
	      </if>
	      <if test="accomplishNum != null">
	         accomplish_num = #{ accomplishNum } ,
	      </if>
	      <if test="state != null">
	         state = #{ state } ,
	      </if>
	      <if test="serialNumber != null">
	         serial_number = #{ serialNumber } ,
	      </if>
	      <if test="intro != null">
	         intro = #{ intro } ,
	      </if>
	      <if test="soldOutTime != null">
	         sold_out_time = #{ soldOutTime } ,
	      </if>
	      <if test="cancelTime != null">
	         cancel_time = #{ cancelTime } ,
	      </if>
	      <if test="backoutUserId != null">
	         backout_user_id = #{ backoutUserId } ,
	      </if>
	      <if test="isDeleted != null">
	         is_deleted = #{ isDeleted } ,
	      </if>
	      <if test="createTime != null">
	         create_time = #{ createTime } ,
	      </if>
	      <if test="createBy != null">
	         create_by = #{ createBy } ,
	      </if>
	      <if test="modifyTime != null">
	         modify_time = #{ modifyTime } ,
	      </if>
	      <if test="modifyBy != null">
	         modify_by = #{ modifyBy } ,
	      </if>
    </set>
    where id = #{ id }
   
  </update>
  
  <update id="updateByPrimaryKey" parameterType="pm">
    update tran_deal_publish
    set  
	        id = #{ id }  ,
	        user_id = #{ userId }  ,
	        type = #{ type }  ,
	        is_publish = #{ isPublish }  ,
	        coin = #{ coin }  ,
	        price = #{ price }  ,
	        number = #{ number }  ,
	        sell_number = #{ sellNumber }  ,
	        freeze_number = #{ freezeNumber }  ,
	        accomplish_num = #{ accomplishNum }  ,
	        state = #{ state }  ,
	        serial_number = #{ serialNumber }  ,
	        intro = #{ intro }  ,
	        sold_out_time = #{ soldOutTime }  ,
	        cancel_time = #{ cancelTime }  ,
	        backout_user_id = #{ backoutUserId }  ,
	        is_deleted = #{ isDeleted }  ,
	        create_time = #{ createTime }  ,
	        create_by = #{ createBy }  ,
	        modify_time = #{ modifyTime }  ,
	        modify_by = #{ modifyBy }  
    where id = #{ id }
  </update> 
	
  <update id="deleteByIds" parameterType="java.lang.String">
	update tran_deal_publish set is_deleted = 'Y'
    where id in
   	<foreach item="ids" collection="array" open="(" separator="," close=")">
#{ids}	</foreach>
  </update>
   
   <!--  query begin -->
	  <select id="getByCondition" resultType="pm" parameterType="pm" >
	    select <include refid="Base_Column_List" />
	   		from tran_deal_publish
	   	  <where>  
	        <if test="id != null">
		        and id = #{ id }
	        </if>
	        <if test="userId != null">
		        and user_id = #{ userId }
	        </if>
	        <if test="type != null">
		        and type = #{ type }
	        </if>
	        <if test="isPublish != null">
		        and is_publish = #{ isPublish }
	        </if>
	        <if test="coin != null">
		        and coin = #{ coin }
	        </if>
	        <if test="price != null">
		        and price = #{ price }
	        </if>
	        <if test="number != null">
		        and number = #{ number }
	        </if>
	        <if test="sellNumber != null">
		        and sell_number = #{ sellNumber }
	        </if>
	        <if test="freezeNumber != null">
		        and freeze_number = #{ freezeNumber }
	        </if>
	        <if test="accomplishNum != null">
		        and accomplish_num = #{ accomplishNum }
	        </if>
	        <if test="state != null">
		        and state = #{ state }
	        </if>
	        <if test="serialNumber != null">
		        and serial_number = #{ serialNumber }
	        </if>
	        <if test="intro != null">
		        and intro = #{ intro }
	        </if>
	        <if test="soldOutTime != null">
		        and sold_out_time = #{ soldOutTime }
	        </if>
	        <if test="cancelTime != null">
		        and cancel_time = #{ cancelTime }
	        </if>
	        <if test="backoutUserId != null">
		        and backout_user_id = #{ backoutUserId }
	        </if>
	        <if test="isDeleted != null">
		        and is_deleted = #{ isDeleted }
	        </if>
	        <if test="createTime != null">
		        and create_time = #{ createTime }
	        </if>
	        <if test="createBy != null">
		        and create_by = #{ createBy }
	        </if>
	        <if test="modifyTime != null">
		        and modify_time = #{ modifyTime }
	        </if>
	        <if test="modifyBy != null">
		        and modify_by = #{ modifyBy }
	        </if>
	    </where> 
	  </select>
	<select id="getByConditionList" resultType="pm" parameterType="pm" >
		SELECT p.id,p.serial_number,CASE WHEN p.type = 0 THEN '出售' WHEN p.type = 1 THEN '购买' ELSE '异常' END AS type,
		u.user_name,p.number,p.sell_number,
		CASE WHEN p.is_publish = 0 THEN '下架' WHEN p.is_publish = 1 THEN '上架'  WHEN p.is_publish = 2 THEN '下架' ELSE '异常' END AS is_publish,
		CASE WHEN p.state = 0 THEN '进行中' WHEN p.state = 1 THEN '取消'  WHEN p.state = 2 THEN '已完成' ELSE '异常' END AS state
		,p.create_time,p.sold_out_time,p.cancel_time,
		 (SELECT group_concat(l.name separator ",") FROM tran_deal_payment d LEFT JOIN usr_payment_account a ON d.payment_id = a.id
		 LEFT JOIN usr_payment_lang l on a.way = l.way WHERE d.publish_id = p.id  AND l.lang = 'zh_CN') AS lcons
		 from tran_deal_publish p LEFT JOIN usr_user u ON p.user_id = u.id
		<where>
			<if test="keyword != null">
				<if test="keyword != ''">
				   and (u.user_name LIKE CONCAT('%', #{keyword}, '%') or p.serial_number LIKE CONCAT('%', #{keyword}, '%'))
				</if>
			</if>

			<if test="mold == 1"> and p.type = 0 </if><if test="mold == 2"> and p.type = 1 </if>

			<if test="putawayState == 1"> and p.is_publish = 1 </if><if test="putawayState == 2"> and p.is_publish = 2 or p.is_publish = 1 </if>

			<if test="advertisingState == 1"> and p.state = 0 </if><if test="advertisingState == 2"> and p.state = 1 </if>
		</where>


		ORDER BY p.create_time DESC

 </select>
	  
	  <select id="getByConditionCount" parameterType="pm" resultType="long" >
	    select COUNT(1)
	   		from tran_deal_publish
	   	  <where>  
	        <if test="id != null">
		        and id = #{ id }
	        </if>
	        <if test="userId != null">
		        and user_id = #{ userId }
	        </if>
	        <if test="type != null">
		        and type = #{ type }
	        </if>
	        <if test="isPublish != null">
		        and is_publish = #{ isPublish }
	        </if>
	        <if test="coin != null">
		        and coin = #{ coin }
	        </if>
	        <if test="price != null">
		        and price = #{ price }
	        </if>
	        <if test="number != null">
		        and number = #{ number }
	        </if>
	        <if test="sellNumber != null">
		        and sell_number = #{ sellNumber }
	        </if>
	        <if test="freezeNumber != null">
		        and freeze_number = #{ freezeNumber }
	        </if>
	        <if test="accomplishNum != null">
		        and accomplish_num = #{ accomplishNum }
	        </if>
	        <if test="state != null">
		        and state = #{ state }
	        </if>
	        <if test="serialNumber != null">
		        and serial_number = #{ serialNumber }
	        </if>
	        <if test="intro != null">
		        and intro = #{ intro }
	        </if>
	        <if test="soldOutTime != null">
		        and sold_out_time = #{ soldOutTime }
	        </if>
	        <if test="cancelTime != null">
		        and cancel_time = #{ cancelTime }
	        </if>
	        <if test="backoutUserId != null">
		        and backout_user_id = #{ backoutUserId }
	        </if>
	        <if test="isDeleted != null">
		        and is_deleted = #{ isDeleted }
	        </if>
	        <if test="createTime != null">
		        and create_time = #{ createTime }
	        </if>
	        <if test="createBy != null">
		        and create_by = #{ createBy }
	        </if>
	        <if test="modifyTime != null">
		        and modify_time = #{ modifyTime }
	        </if>
	        <if test="modifyBy != null">
		        and modify_by = #{ modifyBy }
	        </if>
	    </where> 
	  </select>
	
</mapper>

