<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.admin.dao.coinDetail.CoinDetailDao">
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
	    <![CDATA[
			id ,
			raise_id ,
			consume_coin ,
			consume_price ,
			consume_total ,
			get_coin ,
			get_price ,
			get_total ,
			user_id ,
			is_deleted ,
			create_time ,
			create_by ,
			modify_time ,
			modify_by 
	    ]]>
	</sql>

	  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="pm">
	    select 
	    <include refid="Base_Column_List" />
	    from raise_coin_detail 
	    where id = #{ id }
	  </select>
	  
       <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
	    update raise_coin_detail set is_deleted = 'Y'
	    where id = #{ id }
	  </update>
	  
	  <insert id="insert" parameterType="pm" useGeneratedKeys="true" keyProperty="id">
	    insert into raise_coin_detail (<include refid="Base_Column_List" />)
	    values (
	        	#{ id } ,
	        	#{ raiseId } ,
	        	#{ consumeCoin } ,
	        	#{ consumePrice } ,
	        	#{ consumeTotal } ,
	        	#{ getCoin } ,
	        	#{ getPrice } ,
	        	#{ getTotal } ,
	        	#{ userId } ,
	        	#{ isDeleted } ,
	        	#{ createTime } ,
	        	#{ createBy } ,
	        	#{ modifyTime } ,
	        	#{ modifyBy } 
	    )
  	  </insert>  
  
  <insert id="insertSelective" parameterType="pm" useGeneratedKeys="true" keyProperty="id">
    insert into raise_coin_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
	              <if test="id != null">
			        id ,
			      </if>
	              <if test="raiseId != null">
			        raise_id ,
			      </if>
	              <if test="consumeCoin != null">
			        consume_coin ,
			      </if>
	              <if test="consumePrice != null">
			        consume_price ,
			      </if>
	              <if test="consumeTotal != null">
			        consume_total ,
			      </if>
	              <if test="getCoin != null">
			        get_coin ,
			      </if>
	              <if test="getPrice != null">
			        get_price ,
			      </if>
	              <if test="getTotal != null">
			        get_total ,
			      </if>
	              <if test="userId != null">
			        user_id ,
			      </if>
	              <if test="isDeleted != null">
			        is_deleted ,
			      </if>
	              <if test="createTime != null">
			        create_time ,
			      </if>
	              <if test="createBy != null">
			        create_by ,
			      </if>
	              <if test="modifyTime != null">
			        modify_time ,
			      </if>
	              <if test="modifyBy != null">
			        modify_by ,
			      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
	      <if test="id != null">
	        #{ id } ,
	      </if>
	      <if test="raiseId != null">
	        #{ raiseId } ,
	      </if>
	      <if test="consumeCoin != null">
	        #{ consumeCoin } ,
	      </if>
	      <if test="consumePrice != null">
	        #{ consumePrice } ,
	      </if>
	      <if test="consumeTotal != null">
	        #{ consumeTotal } ,
	      </if>
	      <if test="getCoin != null">
	        #{ getCoin } ,
	      </if>
	      <if test="getPrice != null">
	        #{ getPrice } ,
	      </if>
	      <if test="getTotal != null">
	        #{ getTotal } ,
	      </if>
	      <if test="userId != null">
	        #{ userId } ,
	      </if>
	      <if test="isDeleted != null">
	        #{ isDeleted } ,
	      </if>
	      <if test="createTime != null">
	        #{ createTime } ,
	      </if>
	      <if test="createBy != null">
	        #{ createBy } ,
	      </if>
	      <if test="modifyTime != null">
	        #{ modifyTime } ,
	      </if>
	      <if test="modifyBy != null">
	        #{ modifyBy } ,
	      </if>
    </trim>
  </insert>
    
  
  <update id="updateByPrimaryKeySelective" parameterType="pm">
    update raise_coin_detail
    <set>
	      <if test="id != null">
	         id = #{ id } ,
	      </if>
	      <if test="raiseId != null">
	         raise_id = #{ raiseId } ,
	      </if>
	      <if test="consumeCoin != null">
	         consume_coin = #{ consumeCoin } ,
	      </if>
	      <if test="consumePrice != null">
	         consume_price = #{ consumePrice } ,
	      </if>
	      <if test="consumeTotal != null">
	         consume_total = #{ consumeTotal } ,
	      </if>
	      <if test="getCoin != null">
	         get_coin = #{ getCoin } ,
	      </if>
	      <if test="getPrice != null">
	         get_price = #{ getPrice } ,
	      </if>
	      <if test="getTotal != null">
	         get_total = #{ getTotal } ,
	      </if>
	      <if test="userId != null">
	         user_id = #{ userId } ,
	      </if>
	      <if test="isDeleted != null">
	         is_deleted = #{ isDeleted } ,
	      </if>
	      <if test="createTime != null">
	         create_time = #{ createTime } ,
	      </if>
	      <if test="createBy != null">
	         create_by = #{ createBy } ,
	      </if>
	      <if test="modifyTime != null">
	         modify_time = #{ modifyTime } ,
	      </if>
	      <if test="modifyBy != null">
	         modify_by = #{ modifyBy } ,
	      </if>
    </set>
    where id = #{ id }
   
  </update>
  
  <update id="updateByPrimaryKey" parameterType="pm">
    update raise_coin_detail
    set  
	        id = #{ id }  ,
	        raise_id = #{ raiseId }  ,
	        consume_coin = #{ consumeCoin }  ,
	        consume_price = #{ consumePrice }  ,
	        consume_total = #{ consumeTotal }  ,
	        get_coin = #{ getCoin }  ,
	        get_price = #{ getPrice }  ,
	        get_total = #{ getTotal }  ,
	        user_id = #{ userId }  ,
	        is_deleted = #{ isDeleted }  ,
	        create_time = #{ createTime }  ,
	        create_by = #{ createBy }  ,
	        modify_time = #{ modifyTime }  ,
	        modify_by = #{ modifyBy }  
    where id = #{ id }
  </update> 
	
  <update id="deleteByIds" parameterType="java.lang.String">
	update raise_coin_detail set is_deleted = 'Y'
    where id in
   	<foreach item="ids" collection="array" open="(" separator="," close=")">
#{ids}	</foreach>
  </update>
   
   <!--  query begin -->
	  <select id="getByCondition" resultType="pm" parameterType="pm" >
	    select <include refid="Base_Column_List" />
	   		from raise_coin_detail
	   	  <where>  
	        <if test="id != null">
		        and id = #{ id }
	        </if>
	        <if test="raiseId != null">
		        and raise_id = #{ raiseId }
	        </if>
	        <if test="consumeCoin != null">
		        and consume_coin = #{ consumeCoin }
	        </if>
	        <if test="consumePrice != null">
		        and consume_price = #{ consumePrice }
	        </if>
	        <if test="consumeTotal != null">
		        and consume_total = #{ consumeTotal }
	        </if>
	        <if test="getCoin != null">
		        and get_coin = #{ getCoin }
	        </if>
	        <if test="getPrice != null">
		        and get_price = #{ getPrice }
	        </if>
	        <if test="getTotal != null">
		        and get_total = #{ getTotal }
	        </if>
	        <if test="userId != null">
		        and user_id = #{ userId }
	        </if>
	        <if test="isDeleted != null">
		        and is_deleted = #{ isDeleted }
	        </if>
	        <if test="createTime != null">
		        and create_time = #{ createTime }
	        </if>
	        <if test="createBy != null">
		        and create_by = #{ createBy }
	        </if>
	        <if test="modifyTime != null">
		        and modify_time = #{ modifyTime }
	        </if>
	        <if test="modifyBy != null">
		        and modify_by = #{ modifyBy }
	        </if>
	    </where> 
	  </select>
	  <select id="getByConditionList" resultType="pm" parameterType="pm" >
		  SELECT r.id,u.user_name,u.mobile as  mobile,u.mail as mail,p.title,f.chinese_name,
		  CONCAT(ROUND(r.consume_price/r.get_price,2)," ",ci.chinese_name) AS price, CONCAT(ROUND(ROUND(r.consume_price/r.get_price,2)*r.get_total,2)," ",ci.chinese_name) AS totalMoney,
		  r.get_price,r.get_total,r.create_time
		  FROM raise_coin_detail r LEFT JOIN usr_user u ON r.user_id = u.id LEFT JOIN raise_coin_publish p ON r.raise_id = p.id left join coin_info f on r.get_coin = f.code
		  LEFT JOIN coin_info ci ON r.consume_coin = ci.`code`
		  <where>
			  <if test="keyword != null">
				  and u.user_name like concat(concat("%",#{keyword}),"%")
			  </if>
		  </where>
	    order by r.create_time desc
	  </select>
	  
	  <select id="getByConditionCount" parameterType="pm" resultType="long" >
	    select COUNT(1)
	   		from raise_coin_detail
	   	  <where>  
	        <if test="id != null">
		        and id = #{ id }
	        </if>
	        <if test="raiseId != null">
		        and raise_id = #{ raiseId }
	        </if>
	        <if test="consumeCoin != null">
		        and consume_coin = #{ consumeCoin }
	        </if>
	        <if test="consumePrice != null">
		        and consume_price = #{ consumePrice }
	        </if>
	        <if test="consumeTotal != null">
		        and consume_total = #{ consumeTotal }
	        </if>
	        <if test="getCoin != null">
		        and get_coin = #{ getCoin }
	        </if>
	        <if test="getPrice != null">
		        and get_price = #{ getPrice }
	        </if>
	        <if test="getTotal != null">
		        and get_total = #{ getTotal }
	        </if>
	        <if test="userId != null">
		        and user_id = #{ userId }
	        </if>
	        <if test="isDeleted != null">
		        and is_deleted = #{ isDeleted }
	        </if>
	        <if test="createTime != null">
		        and create_time = #{ createTime }
	        </if>
	        <if test="createBy != null">
		        and create_by = #{ createBy }
	        </if>
	        <if test="modifyTime != null">
		        and modify_time = #{ modifyTime }
	        </if>
	        <if test="modifyBy != null">
		        and modify_by = #{ modifyBy }
	        </if>
	    </where> 
	  </select>
	
</mapper>

